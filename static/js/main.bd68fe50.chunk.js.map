{"version":3,"sources":["assets/horizon-bg.png","assets/8bit-portrait.png","assets/computerSound.mp3","logo.svg","components/MainPage/MainPage.js","components/About/About.js","components/NavBar/NavBar.js","components/Intro/Intro.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MainPage","react_default","a","createElement","className","src","horizon_bg","id","Typist_default","AboutPage","portrait","NavBar","react_router_dom","style","textDecoration","to","Intro","Delay","ms","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateWindowDimensions","setState","pageWidth","window","innerWidth","pageHeight","innerHeight","loadingComplete","setTimeout","introLoaded","state","random","addEventListener","removeEventListener","height","width","lib_default","url","computerSound","playStatus","Sound","status","PLAYING","autoLoad","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","handleSongFinishedPlaying","components_Intro_Intro","react_router","exact","path","component","components_NavBar_NavBar","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd68fe50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/horizon-bg.b0495caa.png\";","module.exports = __webpack_public_path__ + \"static/media/8bit-portrait.dbadd63a.png\";","module.exports = __webpack_public_path__ + \"static/media/computerSound.9798308d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport Typist from 'react-typist';\nimport \"./MainPage.css\";\nimport horizon_bg from \"../../assets/horizon-bg.png\"\nconst MainPage = () => {\n  return (\n    <div className=\"main-page-div\">\n      <p>2019 All Rights Reserved©</p>\n      <br />\n      <img src={horizon_bg} id=\"horizon_bg\" />\n      <br />\n      <div className=\"welcome-message\">\n        <h1 id=\"welcome-message-name\">Jung Rae Jang</h1>\n        <h2 id=\"welcome-message-name2\">Web Developer</h2>\n      </div>\n      <br />\n      <div className=\"main-page-loading\">\n      <h1 id=\"loading-message\">Loading</h1>\n      <Typist>\n      <h1 id=\"loading-message\">........</h1>\n      </Typist>\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport Typist from \"react-typist\";\nimport \"./About.css\";\nimport portrait from \"../../assets/8bit-portrait.png\";\nconst AboutPage = () => {\n  return (\n    <div className=\"about-page-div\">\n      <p>2019 All Rights Reserved©</p>\n      <br />\n      <div className=\"introduction-div\">\n        <img src={portrait} id=\"portrait-img\" />\n        <p>\n          My name is Jung Rae Jang also known as JR. I’m a proud immigrant from\n          South Korea. Before joining Pursuit, I worked as a Community Organizer\n          for non-profits/New York City government, focusing on issues such as\n          immigration and affordable housing. Throughout my work, I realized\n          that I had strong passion for creating and making a difference. I\n          jumped into the tech industry wishing to combine these two passions.\n          In the future, it is my dream to become a developer who works directly\n          with Artificial Intelligence.\n        </p>\n      </div>\n      <br />\n      <div className=\"main-page-loading\">\n        <h1 id=\"loading-message\">Loading</h1>\n        <Typist>\n          <h1 id=\"loading-message\">........</h1>\n        </Typist>\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport default AboutPage;\n","import React from \"react\";\nimport { NavLink, nav } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport \"./NavBar.css\";\n\n const NavBar = () => {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar_links\">\n        <NavLink\n          style={{ textDecoration: \"none\" }}\n          className=\"navlink\"\n          to={\"/\"}\n        >\n          Home\n        </NavLink>\n        <NavLink\n          style={{ textDecoration: \"none\" }}\n          className=\"navlink\"\n          to={\"/about\"}\n\n        >\n          About Me\n        </NavLink>\n        <NavLink\n          style={{ textDecoration: \"none\" }}\n          to={\"/projects\"}\n          className=\"navlink\"\n        >\n          Projects\n        </NavLink>\n        <NavLink\n          style={{ textDecoration: \"none\" }}\n          className=\"navlink\"\n          to={\"/contact\"}\n\n        >\n          Contact\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar\n","import React from \"react\"\nimport \"./Intro.css\"\nimport Typist from 'react-typist';\n\n\nconst Intro = () => {\n  return (\n    <div className=\"intro-div\">\n    <h1>Booting System</h1>\n    <br />\n    <br />\n    <Typist>\n    <p>loading booting element</p>\n    <Typist.Delay ms={500} />\n    <p>.......................</p>\n    </Typist>\n    </div>\n  )\n}\n\nexport default Intro\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Sound from \"react-sound\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MainPage from \"./components/MainPage/MainPage\";\nimport AboutPage from \"./components/About/About\"\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Intro from \"./components/Intro/Intro\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport computerSound from \"./assets/computerSound.mp3\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      random: \"lalalala\",\n      pageHeight: 0,\n      pageWidth: 0,\n      introLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n    this.loadingComplete();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({\n      pageWidth: window.innerWidth,\n      pageHeight: window.innerHeight\n    });\n  };\n\n  loadingComplete = () => {\n    setTimeout(() => {\n      this.setState({\n        introLoaded: true\n      });\n    }, 5500);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"App\"\n        style={{ height: this.state.pageHeight, width: this.state.pageWidth }}\n      >\n        <div\n          className=\"crt\"\n          style={{ height: this.state.pageHeight, width: this.state.pageWidth }}\n        >\n          <Sound\n            url={computerSound}\n            playStatus={Sound.status.PLAYING}\n            autoLoad={true}\n            onLoading={this.handleSongLoading}\n            onPlaying={this.handleSongPlaying}\n            onFinishedPlaying={this.handleSongFinishedPlaying}\n          />\n          {this.state.introLoaded ? null : <Intro />}\n          {this.state.introLoaded ? (\n            <Switch>\n              <Route exact path=\"/portfolio_website/\" component={MainPage} />\n              <Route exact path=\"/portfolio_website/about\" component={AboutPage} />\n            </Switch>\n          ) : null}\n          {this.state.introLoaded ? <NavBar /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}